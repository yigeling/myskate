import { defineComponent as d, computed as n, openBlock as m, createElementBlock as h, normalizeClass as f, unref as r, normalizeStyle as y, createTextVNode as s, createElementVNode as l } from "vue";
const g = ["aria-labelledby"], _ = /* @__PURE__ */ l("path", {
  d: "M87 775.8c-11 0-20-9-20-20V268.2c0-11 9-20 20-20s20 9 20 20v487.6c0 11-9 20-20 20z",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), b = /* @__PURE__ */ l("path", {
  d: "m94.2 512.9 423.4 244.5c.7.4 1.5-.1 1.5-.9v-489c0-.8-.8-1.3-1.5-.9L94.2 511.1c-.7.4-.7 1.4 0 1.8z",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), w = /* @__PURE__ */ l("path", {
  d: "m512.1 512.9 423.4 244.5c.7.4 1.5-.1 1.5-.9v-489c0-.8-.8-1.3-1.5-.9L512.1 511.1c-.7.4-.7 1.4 0 1.8z",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), S = /* @__PURE__ */ d({
  __name: "PlayDoubleBack",
  props: {
    class: { type: String, default: "" },
    name: { type: String, default: "" },
    color: { type: String, default: "" },
    width: { type: [String, Number], default: "" },
    height: { type: [String, Number], default: "" }
  },
  emits: ["click"],
  setup(c, { emit: i }) {
    const e = c, a = (t) => {
      i("click", t);
    }, o = (t) => {
      if (t)
        return isNaN(Number(t)) ? String(t) : t + "px";
    }, p = n(() => {
      const t = "nut-icon";
      return {
        [e.class]: e.class,
        [t]: !0,
        [t + "-" + e.name]: e.name
      };
    }), u = n(() => {
      const t = {};
      return t.height = o(e.height), t.width = o(e.width), t.color = e.color, t;
    });
    return (t, x) => (m(), h("svg", {
      class: f(r(p)),
      style: y(r(u)),
      onClick: a,
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      "aria-labelledby": c.name,
      role: "presentation"
    }, [
      _,
      s(","),
      b,
      s(","),
      w
    ], 14, g));
  }
});
export {
  S as default
};
