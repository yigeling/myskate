import { defineComponent as p, computed as o, openBlock as d, createElementBlock as m, normalizeClass as u, unref as l, normalizeStyle as h, createElementVNode as f } from "vue";
const g = ["aria-labelledby"], y = /* @__PURE__ */ f("path", {
  d: "M1489.611 733.18a92.288 92.288 0 1 0 97.021-157.036c-145.758-90.073-291.516-179.945-437.375-270.068a138.558 138.558 0 0 0-145.506 0C858.094 396.199 712.336 486.07 566.578 576.144a92.288 92.288 0 1 0 97.02 157.036l413.007-255.064 413.057 255.064",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), _ = [
  y
], b = /* @__PURE__ */ p({
  __name: "ArrowUp",
  props: {
    class: { type: String, default: "" },
    name: { type: String, default: "" },
    color: { type: String, default: "" },
    width: { type: [String, Number], default: "" },
    height: { type: [String, Number], default: "" }
  },
  emits: ["click"],
  setup(n, { emit: s }) {
    const t = n, c = (e) => {
      s("click", e);
    }, r = (e) => {
      if (e)
        return isNaN(Number(e)) ? String(e) : e + "px";
    }, i = o(() => {
      const e = "nut-icon";
      return {
        [t.class]: t.class,
        [e]: !0,
        [e + "-" + t.name]: t.name
      };
    }), a = o(() => {
      const e = {};
      return e.height = r(t.height), e.width = r(t.width), e.color = t.color, e;
    });
    return (e, w) => (d(), m("svg", {
      class: u(l(i)),
      style: h(l(a)),
      onClick: c,
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 2252 1024",
      "aria-labelledby": n.name,
      role: "presentation"
    }, _, 14, g));
  }
});
export {
  b as default
};
