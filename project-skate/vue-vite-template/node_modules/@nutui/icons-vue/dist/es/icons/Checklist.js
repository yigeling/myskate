import { defineComponent as p, computed as o, openBlock as d, createElementBlock as m, normalizeClass as u, unref as r, normalizeStyle as h, createElementVNode as f } from "vue";
const g = ["aria-labelledby"], y = /* @__PURE__ */ f("path", {
  d: "M159.289 500.622c62.578 0 125.155 17.067 221.867 102.4 8.533 5.69 19.91 5.69 25.6 0 48.355-54.044 238.933-261.689 455.11-329.955 0 0 28.445-5.69 42.667 19.91 8.534 17.067 19.911 34.134-5.689 54.045-22.755 17.067-264.533 179.2-440.888 440.89l-2.845 2.844c-11.378 8.533-68.267 51.2-119.467-14.223-56.888-71.11-85.333-139.377-196.266-196.266-2.845 0-2.845-2.845-5.69-5.69-11.377-11.377-54.044-73.955 25.6-73.955z",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), _ = [
  y
], b = /* @__PURE__ */ p({
  __name: "Checklist",
  props: {
    class: { type: String, default: "" },
    name: { type: String, default: "" },
    color: { type: String, default: "" },
    width: { type: [String, Number], default: "" },
    height: { type: [String, Number], default: "" }
  },
  emits: ["click"],
  setup(n, { emit: s }) {
    const t = n, c = (e) => {
      s("click", e);
    }, l = (e) => {
      if (e)
        return isNaN(Number(e)) ? String(e) : e + "px";
    }, i = o(() => {
      const e = "nut-icon";
      return {
        [t.class]: t.class,
        [e]: !0,
        [e + "-" + t.name]: t.name
      };
    }), a = o(() => {
      const e = {};
      return e.height = l(t.height), e.width = l(t.width), e.color = t.color, e;
    });
    return (e, w) => (d(), m("svg", {
      class: u(r(i)),
      style: h(r(a)),
      onClick: c,
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      "aria-labelledby": n.name,
      role: "presentation"
    }, _, 14, g));
  }
});
export {
  b as default
};
