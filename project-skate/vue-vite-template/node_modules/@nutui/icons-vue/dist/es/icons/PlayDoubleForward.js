import { defineComponent as u, computed as r, openBlock as h, createElementBlock as m, normalizeClass as f, unref as n, normalizeStyle as y, createTextVNode as s, createElementVNode as l } from "vue";
const g = ["aria-labelledby"], _ = /* @__PURE__ */ l("path", {
  d: "M917 248.2c11 0 20 9 20 20v487.6c0 11-9 20-20 20s-20-9-20-20V268.2c0-11 9-20 20-20z",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), w = /* @__PURE__ */ l("path", {
  d: "M909.8 511.1 486.4 266.7c-.7-.4-1.5.1-1.5.9v488.9c0 .8.8 1.3 1.5.9l423.4-244.5c.7-.4.7-1.4 0-1.8z",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), b = /* @__PURE__ */ l("path", {
  d: "M491.9 511.1 68.5 266.7c-.7-.4-1.5.1-1.5.9v488.9c0 .8.8 1.3 1.5.9l423.4-244.5c.7-.4.7-1.4 0-1.8z",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), S = /* @__PURE__ */ u({
  __name: "PlayDoubleForward",
  props: {
    class: { type: String, default: "" },
    name: { type: String, default: "" },
    color: { type: String, default: "" },
    width: { type: [String, Number], default: "" },
    height: { type: [String, Number], default: "" }
  },
  emits: ["click"],
  setup(o, { emit: i }) {
    const e = o, a = (t) => {
      i("click", t);
    }, c = (t) => {
      if (t)
        return isNaN(Number(t)) ? String(t) : t + "px";
    }, d = r(() => {
      const t = "nut-icon";
      return {
        [e.class]: e.class,
        [t]: !0,
        [t + "-" + e.name]: e.name
      };
    }), p = r(() => {
      const t = {};
      return t.height = c(e.height), t.width = c(e.width), t.color = e.color, t;
    });
    return (t, x) => (h(), m("svg", {
      class: f(n(d)),
      style: y(n(p)),
      onClick: a,
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      "aria-labelledby": o.name,
      role: "presentation"
    }, [
      _,
      s(","),
      w,
      s(","),
      b
    ], 14, g));
  }
});
export {
  S as default
};
