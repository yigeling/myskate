import { defineComponent as h, computed as l, openBlock as m, createElementBlock as p, normalizeClass as d, unref as o, normalizeStyle as u, createElementVNode as f } from "vue";
const g = ["aria-labelledby"], y = /* @__PURE__ */ f("path", {
  d: "M668.444 1024H355.556c-142.223 0-256-113.778-256-256V170.667h824.888V768c0 142.222-113.777 256-256 256zM184.89 256v512c0 93.867 76.8 170.667 170.667 170.667h312.888c93.867 0 170.667-76.8 170.667-170.667V256H184.89zm753.778 0H85.333c-22.755 0-42.666-19.911-42.666-42.667s19.91-42.666 42.666-42.666h853.334c22.755 0 42.666 19.91 42.666 42.666S961.423 256 938.667 256zM625.777 85.333H398.223c-22.755 0-42.666-19.91-42.666-42.666S375.466 0 398.222 0h227.556c22.755 0 42.666 19.911 42.666 42.667s-19.91 42.666-42.666 42.666z",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), S = [
  y
], b = /* @__PURE__ */ h({
  __name: "Del",
  props: {
    class: { type: String, default: "" },
    name: { type: String, default: "" },
    color: { type: String, default: "" },
    width: { type: [String, Number], default: "" },
    height: { type: [String, Number], default: "" }
  },
  emits: ["click"],
  setup(n, { emit: r }) {
    const t = n, s = (e) => {
      r("click", e);
    }, c = (e) => {
      if (e)
        return isNaN(Number(e)) ? String(e) : e + "px";
    }, i = l(() => {
      const e = "nut-icon";
      return {
        [t.class]: t.class,
        [e]: !0,
        [e + "-" + t.name]: t.name
      };
    }), a = l(() => {
      const e = {};
      return e.height = c(t.height), e.width = c(t.width), e.color = t.color, e;
    });
    return (e, _) => (m(), p("svg", {
      class: d(o(i)),
      style: u(o(a)),
      onClick: s,
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      "aria-labelledby": n.name,
      role: "presentation"
    }, S, 14, g));
  }
});
export {
  b as default
};
