import { defineComponent as p, computed as o, openBlock as u, createElementBlock as d, normalizeClass as m, unref as r, normalizeStyle as h, createElementVNode as f } from "vue";
const g = ["aria-labelledby"], y = /* @__PURE__ */ f("path", {
  d: "M345.6 460.8h409.6q51.2 0 51.2 51.2t-51.2 51.2H345.6q-51.2 0-51.2-51.2t51.2-51.2zM550.4 256q51.2 0 51.2 51.2v409.6q0 51.2-51.2 51.2t-51.2-51.2V307.2q0-51.2 51.2-51.2z",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), _ = [
  y
], b = /* @__PURE__ */ p({
  __name: "Plus",
  props: {
    class: { type: String, default: "" },
    name: { type: String, default: "" },
    color: { type: String, default: "" },
    width: { type: [String, Number], default: "" },
    height: { type: [String, Number], default: "" }
  },
  emits: ["click"],
  setup(n, { emit: s }) {
    const e = n, c = (t) => {
      s("click", t);
    }, l = (t) => {
      if (t)
        return isNaN(Number(t)) ? String(t) : t + "px";
    }, i = o(() => {
      const t = "nut-icon";
      return {
        [e.class]: e.class,
        [t]: !0,
        [t + "-" + e.name]: e.name
      };
    }), a = o(() => {
      const t = {};
      return t.height = l(e.height), t.width = l(e.width), t.color = e.color, t;
    });
    return (t, w) => (u(), d("svg", {
      class: m(r(i)),
      style: h(r(a)),
      onClick: c,
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      "aria-labelledby": n.name,
      role: "presentation"
    }, _, 14, g));
  }
});
export {
  b as default
};
