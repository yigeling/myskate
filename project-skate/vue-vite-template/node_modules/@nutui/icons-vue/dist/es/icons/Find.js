import { defineComponent as m, computed as c, openBlock as d, createElementBlock as p, normalizeClass as u, unref as o, normalizeStyle as h, createElementVNode as f } from "vue";
const g = ["aria-labelledby"], y = /* @__PURE__ */ f("path", {
  d: "M512 1024C230.4 1024 0 793.6 0 512S230.4 0 512 0s512 230.4 512 512-230.4 512-512 512zm0-930.91C281.6 93.09 93.09 281.6 93.09 512S281.6 930.91 512 930.91 930.91 742.4 930.91 512 742.4 93.09 512 93.09zM377.018 695.856c-20.945 0-39.563-11.637-46.545-32.582l-6.982-16.291 6.982-18.618 69.818-186.182c11.636-32.582 37.236-55.855 67.49-67.491l204.8-76.8L691.2 307.2c11.636 4.655 20.945 16.29 25.6 27.927l4.655 16.291-4.655 18.618-69.818 186.182c-11.637 32.582-37.237 55.855-67.491 67.491l-186.182 69.818c-4.654 2.328-11.636 2.328-16.29 2.328zm218.764-267.637-95.418 34.91c-6.982 2.327-11.637 6.981-13.964 13.963l-34.91 95.418 95.42-34.909c6.98-2.327 11.635-6.982 13.963-13.964l34.909-95.418z",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), S = [
  y
], C = /* @__PURE__ */ m({
  __name: "Find",
  props: {
    class: { type: String, default: "" },
    name: { type: String, default: "" },
    color: { type: String, default: "" },
    width: { type: [String, Number], default: "" },
    height: { type: [String, Number], default: "" }
  },
  emits: ["click"],
  setup(l, { emit: r }) {
    const t = l, s = (e) => {
      r("click", e);
    }, n = (e) => {
      if (e)
        return isNaN(Number(e)) ? String(e) : e + "px";
    }, i = c(() => {
      const e = "nut-icon";
      return {
        [t.class]: t.class,
        [e]: !0,
        [e + "-" + t.name]: t.name
      };
    }), a = c(() => {
      const e = {};
      return e.height = n(t.height), e.width = n(t.width), e.color = t.color, e;
    });
    return (e, _) => (d(), p("svg", {
      class: u(o(i)),
      style: h(o(a)),
      onClick: s,
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      "aria-labelledby": l.name,
      role: "presentation"
    }, S, 14, g));
  }
});
export {
  C as default
};
