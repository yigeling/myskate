import { defineComponent as u, computed as r, openBlock as d, createElementBlock as m, normalizeClass as h, unref as n, normalizeStyle as f, createTextVNode as g, createElementVNode as a } from "vue";
const y = ["aria-labelledby"], _ = /* @__PURE__ */ a("path", {
  d: "M199.36 572.768a31.904 31.904 0 0 0 22.624-9.376l294.144-294.144 285.728 285.728a31.968 31.968 0 1 0 45.248-45.248L538.752 201.376a32 32 0 0 0-45.28 0L176.704 518.144a31.968 31.968 0 0 0 22.656 54.624z",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), w = /* @__PURE__ */ a("path", {
  d: "M538.784 457.376a32 32 0 0 0-45.28 0L176.736 774.144a31.968 31.968 0 1 0 45.248 45.248l294.144-294.144 285.728 285.728a31.968 31.968 0 1 0 45.248-45.248l-308.32-308.352z",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), b = /* @__PURE__ */ u({
  __name: "DouArrowUp",
  props: {
    class: { type: String, default: "" },
    name: { type: String, default: "" },
    color: { type: String, default: "" },
    width: { type: [String, Number], default: "" },
    height: { type: [String, Number], default: "" }
  },
  emits: ["click"],
  setup(l, { emit: s }) {
    const t = l, c = (e) => {
      s("click", e);
    }, o = (e) => {
      if (e)
        return isNaN(Number(e)) ? String(e) : e + "px";
    }, i = r(() => {
      const e = "nut-icon";
      return {
        [t.class]: t.class,
        [e]: !0,
        [e + "-" + t.name]: t.name
      };
    }), p = r(() => {
      const e = {};
      return e.height = o(t.height), e.width = o(t.width), e.color = t.color, e;
    });
    return (e, x) => (d(), m("svg", {
      class: h(n(i)),
      style: f(n(p)),
      onClick: c,
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      "aria-labelledby": l.name,
      role: "presentation"
    }, [
      _,
      g(","),
      w
    ], 14, y));
  }
});
export {
  b as default
};
