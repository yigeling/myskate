import { defineComponent as m, computed as s, openBlock as p, createElementBlock as d, normalizeClass as u, unref as r, normalizeStyle as h, createElementVNode as f } from "vue";
const g = ["aria-labelledby"], y = /* @__PURE__ */ f("path", {
  d: "M940.873 819.2h-85.334V430.933c0-192-153.6-345.6-341.333-345.6s-341.333 153.6-341.333 345.6V819.2H87.539V430.933C87.54 192 279.54 0 514.206 0s426.667 192 426.667 430.933V819.2zM514.633 1024c-68.267 0-132.267-29.867-174.934-85.333-17.066-17.067-12.8-42.667 4.267-59.734 17.067-12.8 46.933-12.8 59.733 8.534 29.867 34.133 68.267 51.2 110.934 51.2s81.066-17.067 106.666-51.2c12.8-17.067 42.667-21.334 59.734-8.534 17.066 12.8 21.333 42.667 8.533 59.734C646.899 994.133 582.899 1024 514.633 1024zm469.333-162.133h-12.8c-294.4-89.6-618.667-89.6-913.067 0-21.333 4.266-46.933-8.534-55.466-29.867-8.534-21.333 4.266-46.933 29.866-51.2 311.467-93.867 652.8-89.6 964.267 0 21.333 8.533 34.133 29.867 29.867 51.2-8.534 21.333-25.6 29.867-42.667 29.867z",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), _ = [
  y
], S = /* @__PURE__ */ m({
  __name: "Notice",
  props: {
    class: { type: String, default: "" },
    name: { type: String, default: "" },
    color: { type: String, default: "" },
    width: { type: [String, Number], default: "" },
    height: { type: [String, Number], default: "" }
  },
  emits: ["click"],
  setup(n, { emit: c }) {
    const t = n, l = (e) => {
      c("click", e);
    }, o = (e) => {
      if (e)
        return isNaN(Number(e)) ? String(e) : e + "px";
    }, i = s(() => {
      const e = "nut-icon";
      return {
        [t.class]: t.class,
        [e]: !0,
        [e + "-" + t.name]: t.name
      };
    }), a = s(() => {
      const e = {};
      return e.height = o(t.height), e.width = o(t.width), e.color = t.color, e;
    });
    return (e, w) => (p(), d("svg", {
      class: u(r(i)),
      style: h(r(a)),
      onClick: l,
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1027 1024",
      "aria-labelledby": n.name,
      role: "presentation"
    }, _, 14, g));
  }
});
export {
  S as default
};
