import { defineComponent as m, computed as r, openBlock as p, createElementBlock as d, normalizeClass as u, unref as o, normalizeStyle as h, createElementVNode as f } from "vue";
const g = ["aria-labelledby"], y = /* @__PURE__ */ f("path", {
  d: "M257.471 275.98a56.884 56.884 0 1 1-59.785-96.702c89.82-55.632 179.639-110.923 269.515-166.555a85.325 85.325 0 0 1 89.649 0l269.458 166.441a56.884 56.884 0 1 1-59.785 96.76L511.969 118.81 257.47 275.98m0 472.133a56.884 56.884 0 1 0-59.785 96.703l269.515 166.441a85.325 85.325 0 0 0 89.649 0l269.458-166.441a56.884 56.884 0 1 0-59.785-96.703L511.969 905.17C427.099 852.837 342.285 800.39 257.414 748",
  fill: "currentColor",
  "fill-opacity": "0.9"
}, null, -1), _ = [
  y
], b = /* @__PURE__ */ m({
  __name: "ScreenLittle",
  props: {
    class: { type: String, default: "" },
    name: { type: String, default: "" },
    color: { type: String, default: "" },
    width: { type: [String, Number], default: "" },
    height: { type: [String, Number], default: "" }
  },
  emits: ["click"],
  setup(n, { emit: s }) {
    const t = n, c = (e) => {
      s("click", e);
    }, l = (e) => {
      if (e)
        return isNaN(Number(e)) ? String(e) : e + "px";
    }, a = r(() => {
      const e = "nut-icon";
      return {
        [t.class]: t.class,
        [e]: !0,
        [e + "-" + t.name]: t.name
      };
    }), i = r(() => {
      const e = {};
      return e.height = l(t.height), e.width = l(t.width), e.color = t.color, e;
    });
    return (e, S) => (p(), d("svg", {
      class: u(o(a)),
      style: h(o(i)),
      onClick: c,
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024",
      "aria-labelledby": n.name,
      role: "presentation"
    }, _, 14, g));
  }
});
export {
  b as default
};
