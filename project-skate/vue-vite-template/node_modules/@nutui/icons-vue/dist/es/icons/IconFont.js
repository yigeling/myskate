import { defineComponent as p, useSlots as d, useAttrs as g, h, openBlock as S, createBlock as y } from "vue";
const N = /* @__PURE__ */ p({
  __name: "IconFont",
  props: {
    name: { type: String, default: "" },
    size: { type: [String, Number], default: "" },
    width: { type: [String, Number], default: "" },
    height: { type: [String, Number], default: "" },
    classPrefix: { type: String, default: "nut-icon" },
    fontClassName: { type: String, default: "nutui-iconfont" },
    color: { type: String, default: "" },
    tag: { type: String, default: "i" }
  },
  emits: ["click"],
  setup(n, { emit: i }) {
    var a;
    const t = n, c = "nut-icon", l = (e) => {
      i("click", e);
    }, o = d();
    g();
    const u = () => t.name ? t.name.indexOf("/") !== -1 : !1, r = (e) => {
      if (e)
        return isNaN(Number(e)) ? String(e) : e + "px";
    }, s = u();
    let m = h(
      s ? "img" : t.tag,
      {
        class: s ? `${c}__img` : `${t.fontClassName} ${c} ${t.classPrefix}-${t.name}`,
        style: {
          color: t.color,
          fontSize: r(t.size),
          width: r(t.width || t.size),
          height: r(t.height || t.size)
        },
        onClick: l,
        src: s ? t.name : ""
      },
      (a = o.default) == null ? void 0 : a.call(o)
    );
    const f = () => m;
    return (e, x) => (S(), y(f));
  }
}), _ = (n) => (n.install = (i) => {
  i.component("IconFont", n);
}, n), z = _(N);
export {
  z as default
};
