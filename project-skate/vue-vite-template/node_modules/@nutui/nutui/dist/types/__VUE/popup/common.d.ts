import { ComputedRef } from 'vue';
export declare const component: (componentName: string, components: any) => {
    components: any;
    props: {
        visible: {
            type: BooleanConstructor;
            default: boolean;
        };
        zIndex: {
            type: (NumberConstructor | StringConstructor)[];
            default: number;
        };
        duration: {
            type: (NumberConstructor | StringConstructor)[];
            default: number;
        };
        lockScroll: {
            type: BooleanConstructor;
            default: boolean;
        };
        closeOnClickOverlay: {
            type: BooleanConstructor;
            default: boolean;
        };
        position: {
            type: StringConstructor;
            default: string;
        };
        transition: {
            type: StringConstructor;
            default: string;
        };
        style: {
            type: import("vue").PropType<import("vue").CSSProperties>;
            default: {};
        };
        popClass: {
            type: StringConstructor;
            default: string;
        };
        closeable: {
            type: BooleanConstructor;
            default: boolean;
        };
        closeIconPosition: {
            type: StringConstructor;
            default: string;
        };
        closeIcon: {
            type: StringConstructor;
            default: string;
        };
        destroyOnClose: {
            type: BooleanConstructor;
            default: boolean;
        };
        teleport: {
            type: (StringConstructor | {
                new (): Element;
                prototype: Element;
            })[];
            default: string;
        };
        overlay: {
            type: BooleanConstructor;
            default: boolean;
        };
        round: {
            type: BooleanConstructor;
            default: boolean;
        };
        teleportDisable: {
            type: BooleanConstructor;
            default: boolean;
        };
        safeAreaInsetBottom: {
            type: BooleanConstructor;
            default: boolean;
        };
        overlayClass: {
            type: StringConstructor;
            default: string;
        };
        overlayStyle: {
            type: import("vue").PropType<import("vue").CSSProperties>;
            default: {};
        };
    };
    emits: string[];
    setup(props: any, { emit }: any): {
        popStyle: ComputedRef<any>;
        transitionName: ComputedRef<any>;
        classes: ComputedRef<{
            [x: string]: any;
            [x: number]: boolean;
            round: any;
        }>;
        onClick: (e: Event) => void;
        onClickCloseIcon: (e: Event) => void;
        onClickOverlay: (e: Event) => void;
        onOpened: (e: Event) => void;
        onClosed: (e: Event) => void;
        zIndex: import("vue").Ref<any>;
        showSlot: import("vue").Ref<boolean>;
        closed: import("vue").Ref<any>;
    };
};
