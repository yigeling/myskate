import { PropType } from 'vue';
export declare const component: (components: any) => {
    components: any;
    props: {
        visible: {
            type: BooleanConstructor;
            default: boolean;
        };
        overlay: {
            type: BooleanConstructor;
            default: boolean;
        };
        navList: {
            default: () => never[];
            type: PropType<any[]>;
        };
        activeColor: {
            default: string;
            type: StringConstructor;
        };
        activeText: {
            default: string;
            type: StringConstructor;
        };
        unActiveText: {
            default: string;
            type: StringConstructor;
        };
        position: {
            default: () => {
                top: string;
                bottom: string;
            };
            type: ObjectConstructor;
        };
        type: {
            default: string;
            type: StringConstructor;
        };
    };
    emits: string[];
    setup(props: any, { emit }: any): {
        classes: import("vue").ComputedRef<{
            [x: string]: any;
            [x: number]: boolean;
            active: any;
        }>;
        updateValue: (value?: boolean) => void;
        selected: (item: any, event: Event) => void;
        translate: (keyPath: string, ...args: unknown[]) => string;
        current: import("vue").Ref<number>;
    };
};
