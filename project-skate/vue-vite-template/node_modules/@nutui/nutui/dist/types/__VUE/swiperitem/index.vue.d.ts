import { ComputedRef } from 'vue';

declare type Install<T> = T & {
  install(app: import('vue').App): void;
};
declare const _default: Install< import("vue").DefineComponent<{}, {
    style: ComputedRef<any>;
    classes: ComputedRef<{
        [x: string]: boolean;
    }>;
}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{}>>, {}>>;
export default _default;

declare module 'vue' {
  interface GlobalComponents {
      NutSwiperItem: typeof _default;
  }
}