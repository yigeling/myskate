import { PropType } from 'vue';

declare type Install<T> = T & {
  install(app: import('vue').App): void;
};
declare const _default: Install< import("vue").DefineComponent<{
    slots: PropType<(Function | undefined)[]>;
    record: ObjectConstructor;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    slots: PropType<(Function | undefined)[]>;
    record: ObjectConstructor;
}>>, {}>>;
export default _default;

declare module 'vue' {
  interface GlobalComponents {
      NutTable: typeof _default;
  }
}